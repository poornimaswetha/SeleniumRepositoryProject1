package com.icnetbanking.testdata;

import java.io.FileInputStream;
import java.io.IOException;
import java.lang.reflect.Method;

import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;

import com.icnetbanking.testcases.BaseClass;

public class ExcelDataProvider extends BaseClass {

	@DataProvider(name = "InvalidCredentialsLogin")
	public Object[][] getData(Method method) throws IOException {
		// create an object to read the data.properties and readconfig to read the
		// testdatapath xlsx file
		System.out.println(method.getName());
		System.out.println(xlsxtestdatapath);
		FileInputStream fis = new FileInputStream(xlsxtestdatapath);
		XSSFWorkbook WorkBook = new XSSFWorkbook(fis);
		// getStackTrace() method return
        // current method name at 0th index        
		XSSFSheet sht = WorkBook.getSheet(method.getName();
		// Get rowcount and column count
		int rowcount = sht.getPhysicalNumberOfRows();
		int colcount = sht.getRow(0).getLastCellNum();
		//System.out.println("Rowcount=" + rowcount);
		//System.out.println("Columncount=" + colcount);

		// Object array 2 dimensional = Object array[2][3];
		Object[][] data = new Object[rowcount - 1][colcount];
		for (int r = 0; r < rowcount - 1; r++) {
			XSSFRow row = sht.getRow(r + 1);
			for (int c = 0; c < colcount; c++) {
				XSSFCell col = row.getCell(c);
				// Dataformatter will convert all cell value types to string
				DataFormatter df = new DataFormatter();
				data[r][c] = df.formatCellValue(col);
				//System.out.println(data[r][c]);
			}
		}

		WorkBook.close();
		fis.close();
		return data;

	}

}
