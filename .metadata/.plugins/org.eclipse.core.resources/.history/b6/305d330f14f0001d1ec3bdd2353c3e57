package com.icnetbanking.testcases;

import java.io.FileNotFoundException;
import java.time.Duration;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.NoSuchElementException;
import org.testng.Assert;
import org.testng.SkipException;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.aventstack.extentreports.Status;
import com.icnetbanking.pageobjects.AccountPage;
import com.icnetbanking.pageobjects.HomePage;
import com.icnetbanking.pageobjects.LoginPage;

@Listeners(com.icnetbanking.utilities.Listeners.class) // package.Listeners.class
public class TC_Login_001_Test extends BaseClass {

	@Test(priority = 1)
	public void CheckValidUserPwdforLogin() throws InterruptedException {
		HomePage HomePageObj = new HomePage(driver);
		HomePageObj.clicklinkmyaccount();
		HomePageObj.clicklinklogin();
		LoginPage LoginPageObj = new LoginPage(driver);
		LoginPageObj.setusername(username);
		LoginPageObj.setpassword(password);
		LoginPageObj.clickbuttonlogin();
		;
		Thread.sleep(3000);

		// throw new SkipException("This Test got skipped");
		// Assert.assertEquals(Actualtitle, Expectedtitle, "The Title of after loggedin
		// page is mismatching");

		AccountPage AccountPageObj = new AccountPage(driver);
		try {
		Boolean Actualmessage = AccountPageObj.verifyEdityouraccinfodisplayed();
		Boolean Expectedmessage = true;
		logger.info("Actualmessage=" + Actualmessage);
		logger.info("Expectedmessage=" + Expectedmessage);
		if (Actualmessage.equals(Expectedmessage)) {
			Assert.assertTrue(true);
			logger.info("Pass:Edit Your Account information link is displayed");
		} else {
			Assert.assertTrue(false);
			logger.info("Edit Your Account information link is not displayed");
		} catch (NoSuchElementException e) {
			// e.printStackTrace();
			logger.info("No Such Element Found :" + e.getMessage());
			logger.info("Fail: Accout not Created ");
			Listeners.extenttest.log(Status.INFO, "Fail: Accout not Created ");
			Assert.assertTrue(false);			
		}
		}
		

	}

	@Test(dataProvider = "gettestdatafromexcel", dataProviderClass = com.icnetbanking.testdata.CustomDataProvider.class, priority = 2)
	public void CheckInValidUserPwdforLogin(String uname, String pwd) throws InterruptedException {

		HomePage HomePageObj = new HomePage(driver);
		HomePageObj.clicklinkmyaccount();
		logger.info("Cliked on My Account link in HomePage successfully");
		HomePageObj.clicklinklogin();
		logger.info("Cliked on My Login link in HomePage successfully");
		LoginPage LoginPageObj = new LoginPage(driver);
		LoginPageObj.setusername(uname);
		logger.info("Entered Username successfully " + username);
		LoginPageObj.setpassword(pwd);
		logger.info("Entered Password successfully " + password);
		LoginPageObj.clickbuttonlogin();
		;
		logger.info("Clicked Login Button successfully");
		Thread.sleep(3000);
		String Actualmessage = LoginPageObj.gettxtinvalidcredentials();
		String Expectedmessage = "Warning: No match for E-Mail Address and/or Password.";
		logger.info("Actualmessage=" + Actualmessage);
		logger.info("Expectedmessage=" + Expectedmessage);
		if (Actualmessage.equals(Expectedmessage)) {
			Assert.assertTrue(true);
			logger.info("Correct warning message displayed for invalid credentials");
		} else {
			Assert.assertTrue(false);
			logger.info("Correct warning message displayed for invalid credentials");
		}
	}

	@Test(dataProvider = "gettestdatafromexcel", dataProviderClass = com.icnetbanking.testdata.CustomDataProvider.class, priority = 2)
	public void CheckInValidUserValidPwdforLogin(String uname, String pwd) throws InterruptedException {
		HomePage HomePageObj = new HomePage(driver);
		HomePageObj.clicklinkmyaccount();
		logger.info("Cliked on My Account link in HomePage successfully");
		HomePageObj.clicklinklogin();
		logger.info("Cliked on My Login link in HomePage successfully");
		LoginPage LoginPageObj = new LoginPage(driver);
		LoginPageObj.setusername(uname);
		logger.info("Entered Username successfully " + username);
		LoginPageObj.setpassword(pwd);
		logger.info("Entered Password successfully " + password);
		LoginPageObj.clickbuttonlogin();
		;
		logger.info("Clicked Login Button successfully");
		Thread.sleep(3000);
		String Actualmessage = LoginPageObj.gettxtinvalidcredentials();
		String Expectedmessage = "Warning: No match for E-Mail Address and/or Password.";
		logger.info("Actualmessage=" + Actualmessage);
		logger.info("Expectedmessage=" + Expectedmessage);

		if (Actualmessage.equals(Expectedmessage)) {
			Assert.assertTrue(true);
			logger.info("Correct warning message displayed for invalid credentials");
		} else {
			Assert.assertTrue(false);
			logger.info("Correct warning message displayed for invalid credentials");
		}

	}

}
